// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id     String     @id @default(uuid())
  status Boolean    @default(true)
  nome   String
  email  String
  senha  String
  cpf    String
  rg     String?
  tipo   TipoAcesso @default(USER)

  @@map("usuarios")
}

model Consultor {
  id       String     @id @default(uuid())
  status   Boolean    @default(true)
  nome     String
  email    String
  senha    String
  cpf      String
  rg       String?
  tipo     TipoAcesso @default(VENDEDOR)
  proposta Proposta[]

  @@map("consultores")
}

model Cliente {
  id            String     @id @default(uuid())
  razao_social  String
  nome_fantasia String
  cnpj          String
  email         String
  endereco      String?
  telefone      String?
  site          String?
  proposta      Proposta[]

  @@map("clientes")
}

model Produto {
  id             String @id @default(uuid())
  descricao      String
  valor_unitario Float

  categoria    Categoria @relation(fields: [categoria_id], references: [id])
  categoria_id String

  produtoProposta ProdutoProposta?

  @@map("produtos")
}

model Categoria {
  id   String @id @default(uuid())
  nome String

  produtos Produto[]

  @@map("categorias")
}

model ProdutoProposta {
  id       String @id @default(uuid())
  quantity Int

  product  Produto  @relation(fields: [id_product], references: [id])
  proposal Proposta @relation(fields: [id_proposal], references: [id])

  id_product  String @unique
  id_proposal String

  @@map("produtos_proposta")
}

model Proposta {
  id              String   @id @default(uuid())
  numero_proposta Int      @default(autoincrement())
  status          Boolean  @default(true)
  total           Float
  descricao       String?
  data_criacao    DateTime @default(now())

  //Relations

  cliente      Cliente   @relation(fields: [cliente_id], references: [id])
  consultor    Consultor @relation(fields: [consultor_id], references: [id])
  cliente_id   String
  consultor_id String

  produtos_proposta ProdutoProposta[]

  @@map("propostas")
}

enum TipoAcesso {
  USER
  ADMIN
  VENDEDOR
}
