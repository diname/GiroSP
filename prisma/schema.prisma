// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model Usuario{
  id String @id @default(uuid())
  codigo_usuario Int @default(autoincrement())
  status Boolean @default(true)
  nome String
  email String
  senha String
  cpf String
  rg String?
  data_criacao DateTime? @default(now())
  data_alteracao DateTime? @default(now())
  access AccessType @default(USER)

  @@map("usuarios")

}
model Vendedor{
  id String @id @default(uuid())
  codigo_vendedor Int @default(autoincrement())
  status Boolean @default(true)
  nome String
  email String
  senha String
  cpf String
  rg String?
  data_criacao DateTime? @default(now())
  data_alteracao DateTime? @default(now())
  access AccessType @default(VENDEDOR)

  @@map("vendedores")
  proposta Proposta[]

}


model Cliente{
  id String @id @default(uuid())
  codigo_cliente Int @default(autoincrement())
  razao_social String
  nome_fantasia String
  cnpj String
  email String
  endereco String?
  telefone String?
  site String?
  data_criacao DateTime? @default(now())
  data_alteracao DateTime? @default(now())

  @@map("clientes")
  proposta Proposta[]

}

model Produto{
  id String @id @default(uuid())
  codigo_produto Int @default(autoincrement())
  descricao String
  valor_unitario Float

  categoria Categoria @relation(fields: [id_categoria], references: [id])
  id_categoria String

  @@map("produtos")

  produtoProposta ProdutoProposta?
}

model Categoria{
  id String @id @default(uuid())
  codigo_categoria Int @default(autoincrement())
  nome_categoria String

  @@map("categorias")

  produtos Produto[]
}

model ProdutoProposta{
  id String @id @default(uuid())
  quantidade Int

  produto Produto @relation(fields: [id_produto], references: [id])
  proposta Proposta @relation(fields: [id_proposta], references: [id])
  
  id_produto String @unique
  id_proposta String

  @@map("produtos_proposta")

  
}

model Proposta{
  id String @id @default(uuid())
  nro_proposta Int @default(autoincrement())
  status Boolean @default(true)
  valor_total Float
  prazo_pgto Int
  descricao String?
  data_atualizacao DateTime @default(now())
  data_criacao DateTime @default(now())

  //Relations
  
  cliente Cliente @relation(fields: [id_cliente], references: [id])
  vendedor Vendedor @relation(fields: [id_vendedor], references: [id])
  id_cliente String
  id_vendedor String
  
  @@map("propostas")

  produtoProposta ProdutoProposta[]
}

enum AccessType{
  USER
  ADMIN
  VENDEDOR
}